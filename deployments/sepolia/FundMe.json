{
  "address": "0x762367A675DF3ecC2A255BDCF456e9A6bE966B3e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x076b3b4c9eb9656e6c3d6dcfc9bc6f2cde19682fa282ce135b791bf44f9b3ca0",
  "receipt": {
    "to": null,
    "from": "0x559a423CcC9BC341c3BD57FeA91932A478D33761",
    "contractAddress": "0x762367A675DF3ecC2A255BDCF456e9A6bE966B3e",
    "transactionIndex": 35,
    "gasUsed": "914695",
    "logsBloom": "0x
    "blockHash": "0xfd7a22ebab0a1e65e37e6872601baf87618e3dceeb018cc0f65c05977ddcf2d4",
    "transactionHash": "0x076b3b4c9eb9656e6c3d6dcfc9bc6f2cde19682fa282ce135b791bf44f9b3ca0",
    "logs": [],
    "blockNumber": 4777274,
    "cumulativeGasUsed": "4614534",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 2,
  "solcInputHash": "effbb5a2fbf4593c53eeb6d78fb72dbc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConventer.sol\\\";\\n\\nerror NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private addressToAmountFunded;\\n    address[] private funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private priceFeed;\\n    \\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(\\n            priceFeedAddress\\n        );\\n    }\\n\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        funders.push(msg.sender);\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    function getAddressToAmountFunded(address userAddress) public view returns(uint256) {\\n        return addressToAmountFunded[userAddress];\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n}\\n\",\"keccak256\":\"0xbef866b453b3908fd7085d6297da196f8ddf2ec3734602fc783337c0aa410fd3\",\"license\":\"MIT\"},\"contracts/PriceConventer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // Sepolia ETH / USD Address\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x08cd043af6fb2dc9c1174c692908550daee96fb0783644da2622517e80522fda\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516200101c3803806200101c8339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610ec0806200015c6000396000f3fe6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063d7b4750c14610141578063dba6335f1461017e57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107f8565b6102e3565b6040516100c1919061083e565b60405180910390f35b3480156100d657600080fd5b506100df61032b565b005b3480156100ed57600080fd5b506100f661056d565b604051610103919061083e565b60405180910390f35b34801561011857600080fd5b5061012161057a565b60405161012e91906108b8565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108ff565b6105a4565b604051610175919061093b565b60405180910390f35b34801561018a57600080fd5b506101936105ec565b6040516101a0919061093b565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061290919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109b3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a02565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b2576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561045d576000600182815481106103d8576103d7610a58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045590610a87565b9150506103b5565b50600067ffffffffffffffff81111561047957610478610ad0565b5b6040519080825280602002602001820160405280156104a75781602001602082028036833780820191505090505b50600190805190602001906104bd9291906106ee565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e490610b30565b60006040518083038185875af1925050503d8060008114610521576040519150601f19603f3d011682016040523d82523d6000602084013e610526565b606091505b505090508061056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190610b91565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600182815481106105ba576105b9610a58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061061e8361064e565b90506000670de0b6b3a764000085836106379190610bb1565b6106419190610c3a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069757600080fd5b505afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190610cf8565b5050509150506402540be400816106e69190610d73565b915050919050565b828054828255906000526020600020908101928215610767579160200282015b828111156107665782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061070e565b5b5090506107749190610778565b5090565b5b80821115610791576000816000905550600101610779565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c58261079a565b9050919050565b6107d5816107ba565b81146107e057600080fd5b50565b6000813590506107f2816107cc565b92915050565b60006020828403121561080e5761080d610795565b5b600061081c848285016107e3565b91505092915050565b6000819050919050565b61083881610825565b82525050565b6000602082019050610853600083018461082f565b92915050565b6000819050919050565b600061087e6108796108748461079a565b610859565b61079a565b9050919050565b600061089082610863565b9050919050565b60006108a282610885565b9050919050565b6108b281610897565b82525050565b60006020820190506108cd60008301846108a9565b92915050565b6108dc81610825565b81146108e757600080fd5b50565b6000813590506108f9816108d3565b92915050565b60006020828403121561091557610914610795565b5b6000610923848285016108ea565b91505092915050565b610935816107ba565b82525050565b6000602082019050610950600083018461092c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061099d601b83610956565b91506109a882610967565b602082019050919050565b600060208201905081810360008301526109cc81610990565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0d82610825565b9150610a1883610825565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4d57610a4c6109d3565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9282610825565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac557610ac46109d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b1a600083610aff565b9150610b2582610b0a565b600082019050919050565b6000610b3b82610b0d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b7b600b83610956565b9150610b8682610b45565b602082019050919050565b60006020820190508181036000830152610baa81610b6e565b9050919050565b6000610bbc82610825565b9150610bc783610825565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0057610bff6109d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4582610825565b9150610c5083610825565b925082610c6057610c5f610c0b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8a81610c6b565b8114610c9557600080fd5b50565b600081519050610ca781610c81565b92915050565b6000819050919050565b610cc081610cad565b8114610ccb57600080fd5b50565b600081519050610cdd81610cb7565b92915050565b600081519050610cf2816108d3565b92915050565b600080600080600060a08688031215610d1457610d13610795565b5b6000610d2288828901610c98565b9550506020610d3388828901610cce565b9450506040610d4488828901610ce3565b9350506060610d5588828901610ce3565b9250506080610d6688828901610c98565b9150509295509295909350565b6000610d7e82610cad565b9150610d8983610cad565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc857610dc76109d3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0557610e046109d3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4257610e416109d3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7f57610e7e6109d3565b5b82820290509291505056fea2646970667358221220d35bff078393e869d2db4b7aa3e2fc5a8498a261ca34a789e45640950498e9d764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80639e87a5cd1161004e5780639e87a5cd1461010c578063b60d428814610137578063d7b4750c14610141578063dba6335f1461017e57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af91906107f8565b6102e3565b6040516100c1919061083e565b60405180910390f35b3480156100d657600080fd5b506100df61032b565b005b3480156100ed57600080fd5b506100f661056d565b604051610103919061083e565b60405180910390f35b34801561011857600080fd5b5061012161057a565b60405161012e91906108b8565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b50610168600480360381019061016391906108ff565b6105a4565b604051610175919061093b565b60405180910390f35b34801561018a57600080fd5b506101936105ec565b6040516101a0919061093b565b60405180910390f35b6802b5e3af16b18800006101e8600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061290919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109b3565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a02565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b2576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561045d576000600182815481106103d8576103d7610a58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045590610a87565b9150506103b5565b50600067ffffffffffffffff81111561047957610478610ad0565b5b6040519080825280602002602001820160405280156104a75781602001602082028036833780820191505090505b50600190805190602001906104bd9291906106ee565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e490610b30565b60006040518083038185875af1925050503d8060008114610521576040519150601f19603f3d011682016040523d82523d6000602084013e610526565b606091505b505090508061056a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056190610b91565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600182815481106105ba576105b9610a58565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061061e8361064e565b90506000670de0b6b3a764000085836106379190610bb1565b6106419190610c3a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561069757600080fd5b505afa1580156106ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106cf9190610cf8565b5050509150506402540be400816106e69190610d73565b915050919050565b828054828255906000526020600020908101928215610767579160200282015b828111156107665782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061070e565b5b5090506107749190610778565b5090565b5b80821115610791576000816000905550600101610779565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107c58261079a565b9050919050565b6107d5816107ba565b81146107e057600080fd5b50565b6000813590506107f2816107cc565b92915050565b60006020828403121561080e5761080d610795565b5b600061081c848285016107e3565b91505092915050565b6000819050919050565b61083881610825565b82525050565b6000602082019050610853600083018461082f565b92915050565b6000819050919050565b600061087e6108796108748461079a565b610859565b61079a565b9050919050565b600061089082610863565b9050919050565b60006108a282610885565b9050919050565b6108b281610897565b82525050565b60006020820190506108cd60008301846108a9565b92915050565b6108dc81610825565b81146108e757600080fd5b50565b6000813590506108f9816108d3565b92915050565b60006020828403121561091557610914610795565b5b6000610923848285016108ea565b91505092915050565b610935816107ba565b82525050565b6000602082019050610950600083018461092c565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b600061099d601b83610956565b91506109a882610967565b602082019050919050565b600060208201905081810360008301526109cc81610990565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a0d82610825565b9150610a1883610825565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a4d57610a4c6109d3565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a9282610825565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610ac557610ac46109d3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b1a600083610aff565b9150610b2582610b0a565b600082019050919050565b6000610b3b82610b0d565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b7b600b83610956565b9150610b8682610b45565b602082019050919050565b60006020820190508181036000830152610baa81610b6e565b9050919050565b6000610bbc82610825565b9150610bc783610825565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c0057610bff6109d3565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c4582610825565b9150610c5083610825565b925082610c6057610c5f610c0b565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c8a81610c6b565b8114610c9557600080fd5b50565b600081519050610ca781610c81565b92915050565b6000819050919050565b610cc081610cad565b8114610ccb57600080fd5b50565b600081519050610cdd81610cb7565b92915050565b600081519050610cf2816108d3565b92915050565b600080600080600060a08688031215610d1457610d13610795565b5b6000610d2288828901610c98565b9550506020610d3388828901610cce565b9450506040610d4488828901610ce3565b9350506060610d5588828901610ce3565b9250506080610d6688828901610c98565b9150509295509295909350565b6000610d7e82610cad565b9150610d8983610cad565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dc857610dc76109d3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e0557610e046109d3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e4257610e416109d3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7f57610e7e6109d3565b5b82820290509291505056fea2646970667358221220d35bff078393e869d2db4b7aa3e2fc5a8498a261ca34a789e45640950498e9d764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}